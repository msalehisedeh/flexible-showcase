{"hash":"0e93463ce7501880d8c5f5c55b209ae51702ce40","fesm2020":[{"exports":["FlexibleShowcaseComponent","FlexibleShowcaseModule"],"facadeModuleId":"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/sedeh-flexible-showcase.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase.component.mjs","/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase-module.mjs","/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/public-api.mjs","/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/sedeh-flexible-showcase.mjs"],"name":"sedeh-flexible-showcase","type":"chunk","dynamicImports":[],"fileName":"sedeh-flexible-showcase.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["EventEmitter","*","Component","ViewChild","Input","Output","NgModule","CUSTOM_ELEMENTS_SCHEMA"],"@angular/common":["*","CommonModule"]},"imports":["@angular/core","@angular/common"],"modules":{"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase.component.mjs":{"code":"class FlexibleShowcaseComponent {\n    constructor() {\n        this.translatedPosition = 0;\n        this.shiftedIndex = 0;\n        this.selectedIndex = 0;\n        this.paginate = false;\n        this.hasControls = true;\n        this.hoverPlay = false;\n        this.zoomOnHover = false;\n        this.peekOnHover = false;\n        this.enableEventTracking = false;\n        this.magnificationFactor = 2;\n        this.message = \"click to select \";\n        this.onEventTracking = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        if (this.thumbnails) {\n            this.selectedIndex = 0;\n            this.thumbnails[0].selected = true;\n            this.selectedItem = this.thumbnails[0];\n        }\n        this.paginate = (this.thumbnails.length * 60) > this.width;\n    }\n    ngOnChanges(changes) {\n        if (changes.position && this.slider) {\n            // should have initial position or remember last user action.\n            this.translatedPosition = 0;\n            this.shiftedIndex = 0;\n            this.slider.nativeElement.style.transform = \"translate(0px,0px)\";\n        }\n    }\n    hoverOver(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            if (img) {\n                const rect = img.getBoundingClientRect();\n                this.largeImage.nativeElement.style.width = (this.magnificationFactor * rect.width) + 'px';\n                this.largeImage.nativeElement.style.height = (this.magnificationFactor * rect.height) + 'px';\n                img.style.visibility = 'hidden';\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: \"zoomed\",\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverOut(event) {\n        if (this.largeImage) {\n            const img = event.target.children[0];\n            img.style.visibility = 'visible';\n            this.largeImage.nativeElement.style.opacity = 0;\n            this.largeImage.nativeElement.style.top = \"-10000px\";\n            this.largeImage.nativeElement.style.left = \"-10000px\";\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverViewPort(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            const rect = img.getBoundingClientRect();\n            const dx = (this.width - rect.width) * (this.magnificationFactor / 2);\n            const dy = (this.height - rect.height) * (this.magnificationFactor / 2);\n            const y = event.layerY * (this.magnificationFactor - 1);\n            const x = event.layerX * (this.magnificationFactor - 1);\n            this.largeImage.nativeElement.style.top = (-y + dy) + \"px\";\n            this.largeImage.nativeElement.style.left = (-x + dx) + \"px\";\n            this.largeImage.nativeElement.style.opacity = 1;\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date(),\n                    item: {\n                        Y: x,\n                        X: y\n                    }\n                });\n            }\n        }\n    }\n    shiftDisplay(slider, position, toEnd) {\n        if (this.paginate) {\n            const rect = slider.getBoundingClientRect();\n            const child = slider.children[this.shiftedIndex];\n            const rect2 = child.getBoundingClientRect();\n            const len = (slider.children.length - 1);\n            const tp = this.translatedPosition;\n            if (position === \"top\" || position === \"bottom\") {\n                this.translatedPosition += (toEnd ? -rect2.width : rect2.width);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect.width) < 0 ? this.translatedPosition + rect2.width : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateX(\" + this.translatedPosition + \"px)\";\n            }\n            else {\n                this.translatedPosition += (toEnd ? -rect2.height : rect2.height);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect2.height) < 0 ? this.translatedPosition + rect2.height : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateY(\" + this.translatedPosition + \"px)\";\n            }\n            if (tp !== this.translatedPosition) {\n                if (toEnd) {\n                    this.shiftedIndex++;\n                    this.shiftedIndex = this.shiftedIndex < len ? this.shiftedIndex : len;\n                }\n                else {\n                    this.shiftedIndex--;\n                    this.shiftedIndex = this.shiftedIndex < 0 ? 0 : this.shiftedIndex;\n                }\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    action: \"thombnail shift\",\n                    time: new Date()\n                });\n            }\n        }\n    }\n    updateControls(event) {\n        if (this.hasControls) {\n            event.target.setAttribute('controls', 'true');\n        }\n        if (this.hoverPlay) {\n            event.target.play();\n        }\n    }\n    resetControls(event) {\n        if (this.hoverPlay && this.isPlaying(event.target)) {\n            event.target.pause();\n        }\n    }\n    isPlaying(video) {\n        return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\n    }\n    videoKeyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            if (this.isPlaying(event.target)) {\n                event.target.pause();\n            }\n            else {\n                event.target.play();\n            }\n        }\n    }\n    keyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            event.target.click();\n        }\n    }\n    videoEvent(event) {\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.productId,\n                thumbnailId: this.selectedItem.thumbnailId,\n                action: event.type,\n                title: this.selectedItem.title,\n                time: new Date(),\n                item: {\n                    autoplay: event.target.autoplay,\n                    controls: event.target.controls,\n                    duration: event.target.duration,\n                    ended: event.target.ended,\n                    error: event.target.error,\n                    paused: event.target.paused,\n                    muted: event.target.muted,\n                    currentTime: event.target.currentTime,\n                    volume: event.target.volume\n                }\n            });\n        }\n    }\n    hoverTab(i, slider, position, onhover) {\n        if (this.peekOnHover) {\n            this.hoverItem = this.thumbnails[i];\n        }\n        if (!onhover && i !== this.shiftedIndex) {\n            const toEnd = this.shiftedIndex < i;\n            this.shiftedIndex = i;\n            this.shiftDisplay(slider, position, toEnd);\n        }\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: (onhover ? \"hover\" : \"focus\"),\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n    selectTab(i) {\n        this.thumbnails.map((tab) => tab.selected = false);\n        this.selectedIndex = i;\n        this.thumbnails[i].selected = true;\n        this.selectedItem = this.thumbnails[i];\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: \"select\",\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n}\nFlexibleShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nFlexibleShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: FlexibleShowcaseComponent, selector: \"showcase\", inputs: { position: \"position\", width: \"width\", hasControls: \"hasControls\", hoverPlay: \"hoverPlay\", height: \"height\", productId: \"productId\", zoomOnHover: \"zoomOnHover\", peekOnHover: \"peekOnHover\", enableEventTracking: \"enableEventTracking\", magnificationFactor: \"magnificationFactor\", thumbnails: \"thumbnails\", message: \"message\" }, outputs: { onEventTracking: \"onEventTracking\" }, viewQueries: [{ propertyName: \"largeImage\", first: true, predicate: [\"largeImage\"], descendants: true }, { propertyName: \"slider\", first: true, predicate: [\"slider\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'showcase', template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { largeImage: [{\n                type: ViewChild,\n                args: [\"largeImage\", { static: false }]\n            }], slider: [{\n                type: ViewChild,\n                args: [\"slider\", { static: false }]\n            }], position: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], hasControls: [{\n                type: Input\n            }], hoverPlay: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], productId: [{\n                type: Input\n            }], zoomOnHover: [{\n                type: Input\n            }], peekOnHover: [{\n                type: Input\n            }], enableEventTracking: [{\n                type: Input\n            }], magnificationFactor: [{\n                type: Input\n            }], thumbnails: [{\n                type: Input\n            }], message: [{\n                type: Input\n            }], onEventTracking: [{\n                type: Output,\n                args: ['onEventTracking']\n            }] } });","originalLength":72330,"removedExports":[],"renderedExports":["FlexibleShowcaseComponent"],"renderedLength":36821},"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase-module.mjs":{"code":"/*\n* Provides rendering of flexible tabs in a lazy load fashion.\n*/\nclass FlexibleShowcaseModule {\n}\nFlexibleShowcaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFlexibleShowcaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, declarations: [FlexibleShowcaseComponent], imports: [CommonModule], exports: [FlexibleShowcaseComponent] });\nFlexibleShowcaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        FlexibleShowcaseComponent\n                    ],\n                    exports: [\n                        FlexibleShowcaseComponent\n                    ],\n                    entryComponents: [],\n                    providers: [],\n                    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n                }]\n        }] });","originalLength":3417,"removedExports":[],"renderedExports":["FlexibleShowcaseModule"],"renderedLength":1357},"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/public-api.mjs":{"code":"/*\n * Public API Surface of flexible-showcase\n */","originalLength":703,"removedExports":[],"renderedExports":[],"renderedLength":49},"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/sedeh-flexible-showcase.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":540,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Input, Output, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass FlexibleShowcaseComponent {\n    constructor() {\n        this.translatedPosition = 0;\n        this.shiftedIndex = 0;\n        this.selectedIndex = 0;\n        this.paginate = false;\n        this.hasControls = true;\n        this.hoverPlay = false;\n        this.zoomOnHover = false;\n        this.peekOnHover = false;\n        this.enableEventTracking = false;\n        this.magnificationFactor = 2;\n        this.message = \"click to select \";\n        this.onEventTracking = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        if (this.thumbnails) {\n            this.selectedIndex = 0;\n            this.thumbnails[0].selected = true;\n            this.selectedItem = this.thumbnails[0];\n        }\n        this.paginate = (this.thumbnails.length * 60) > this.width;\n    }\n    ngOnChanges(changes) {\n        if (changes.position && this.slider) {\n            // should have initial position or remember last user action.\n            this.translatedPosition = 0;\n            this.shiftedIndex = 0;\n            this.slider.nativeElement.style.transform = \"translate(0px,0px)\";\n        }\n    }\n    hoverOver(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            if (img) {\n                const rect = img.getBoundingClientRect();\n                this.largeImage.nativeElement.style.width = (this.magnificationFactor * rect.width) + 'px';\n                this.largeImage.nativeElement.style.height = (this.magnificationFactor * rect.height) + 'px';\n                img.style.visibility = 'hidden';\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: \"zoomed\",\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverOut(event) {\n        if (this.largeImage) {\n            const img = event.target.children[0];\n            img.style.visibility = 'visible';\n            this.largeImage.nativeElement.style.opacity = 0;\n            this.largeImage.nativeElement.style.top = \"-10000px\";\n            this.largeImage.nativeElement.style.left = \"-10000px\";\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverViewPort(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            const rect = img.getBoundingClientRect();\n            const dx = (this.width - rect.width) * (this.magnificationFactor / 2);\n            const dy = (this.height - rect.height) * (this.magnificationFactor / 2);\n            const y = event.layerY * (this.magnificationFactor - 1);\n            const x = event.layerX * (this.magnificationFactor - 1);\n            this.largeImage.nativeElement.style.top = (-y + dy) + \"px\";\n            this.largeImage.nativeElement.style.left = (-x + dx) + \"px\";\n            this.largeImage.nativeElement.style.opacity = 1;\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date(),\n                    item: {\n                        Y: x,\n                        X: y\n                    }\n                });\n            }\n        }\n    }\n    shiftDisplay(slider, position, toEnd) {\n        if (this.paginate) {\n            const rect = slider.getBoundingClientRect();\n            const child = slider.children[this.shiftedIndex];\n            const rect2 = child.getBoundingClientRect();\n            const len = (slider.children.length - 1);\n            const tp = this.translatedPosition;\n            if (position === \"top\" || position === \"bottom\") {\n                this.translatedPosition += (toEnd ? -rect2.width : rect2.width);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect.width) < 0 ? this.translatedPosition + rect2.width : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateX(\" + this.translatedPosition + \"px)\";\n            }\n            else {\n                this.translatedPosition += (toEnd ? -rect2.height : rect2.height);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect2.height) < 0 ? this.translatedPosition + rect2.height : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateY(\" + this.translatedPosition + \"px)\";\n            }\n            if (tp !== this.translatedPosition) {\n                if (toEnd) {\n                    this.shiftedIndex++;\n                    this.shiftedIndex = this.shiftedIndex < len ? this.shiftedIndex : len;\n                }\n                else {\n                    this.shiftedIndex--;\n                    this.shiftedIndex = this.shiftedIndex < 0 ? 0 : this.shiftedIndex;\n                }\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    action: \"thombnail shift\",\n                    time: new Date()\n                });\n            }\n        }\n    }\n    updateControls(event) {\n        if (this.hasControls) {\n            event.target.setAttribute('controls', 'true');\n        }\n        if (this.hoverPlay) {\n            event.target.play();\n        }\n    }\n    resetControls(event) {\n        if (this.hoverPlay && this.isPlaying(event.target)) {\n            event.target.pause();\n        }\n    }\n    isPlaying(video) {\n        return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\n    }\n    videoKeyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            if (this.isPlaying(event.target)) {\n                event.target.pause();\n            }\n            else {\n                event.target.play();\n            }\n        }\n    }\n    keyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            event.target.click();\n        }\n    }\n    videoEvent(event) {\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.productId,\n                thumbnailId: this.selectedItem.thumbnailId,\n                action: event.type,\n                title: this.selectedItem.title,\n                time: new Date(),\n                item: {\n                    autoplay: event.target.autoplay,\n                    controls: event.target.controls,\n                    duration: event.target.duration,\n                    ended: event.target.ended,\n                    error: event.target.error,\n                    paused: event.target.paused,\n                    muted: event.target.muted,\n                    currentTime: event.target.currentTime,\n                    volume: event.target.volume\n                }\n            });\n        }\n    }\n    hoverTab(i, slider, position, onhover) {\n        if (this.peekOnHover) {\n            this.hoverItem = this.thumbnails[i];\n        }\n        if (!onhover && i !== this.shiftedIndex) {\n            const toEnd = this.shiftedIndex < i;\n            this.shiftedIndex = i;\n            this.shiftDisplay(slider, position, toEnd);\n        }\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: (onhover ? \"hover\" : \"focus\"),\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n    selectTab(i) {\n        this.thumbnails.map((tab) => tab.selected = false);\n        this.selectedIndex = i;\n        this.thumbnails[i].selected = true;\n        this.selectedItem = this.thumbnails[i];\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: \"select\",\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n}\nFlexibleShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nFlexibleShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: FlexibleShowcaseComponent, selector: \"showcase\", inputs: { position: \"position\", width: \"width\", hasControls: \"hasControls\", hoverPlay: \"hoverPlay\", height: \"height\", productId: \"productId\", zoomOnHover: \"zoomOnHover\", peekOnHover: \"peekOnHover\", enableEventTracking: \"enableEventTracking\", magnificationFactor: \"magnificationFactor\", thumbnails: \"thumbnails\", message: \"message\" }, outputs: { onEventTracking: \"onEventTracking\" }, viewQueries: [{ propertyName: \"largeImage\", first: true, predicate: [\"largeImage\"], descendants: true }, { propertyName: \"slider\", first: true, predicate: [\"slider\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'showcase', template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { largeImage: [{\n                type: ViewChild,\n                args: [\"largeImage\", { static: false }]\n            }], slider: [{\n                type: ViewChild,\n                args: [\"slider\", { static: false }]\n            }], position: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], hasControls: [{\n                type: Input\n            }], hoverPlay: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], productId: [{\n                type: Input\n            }], zoomOnHover: [{\n                type: Input\n            }], peekOnHover: [{\n                type: Input\n            }], enableEventTracking: [{\n                type: Input\n            }], magnificationFactor: [{\n                type: Input\n            }], thumbnails: [{\n                type: Input\n            }], message: [{\n                type: Input\n            }], onEventTracking: [{\n                type: Output,\n                args: ['onEventTracking']\n            }] } });\n\n/*\n* Provides rendering of flexible tabs in a lazy load fashion.\n*/\nclass FlexibleShowcaseModule {\n}\nFlexibleShowcaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFlexibleShowcaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, declarations: [FlexibleShowcaseComponent], imports: [CommonModule], exports: [FlexibleShowcaseComponent] });\nFlexibleShowcaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        FlexibleShowcaseComponent\n                    ],\n                    exports: [\n                        FlexibleShowcaseComponent\n                    ],\n                    entryComponents: [],\n                    providers: [],\n                    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n                }]\n        }] });\n\n/*\n * Public API Surface of flexible-showcase\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FlexibleShowcaseComponent, FlexibleShowcaseModule };\n//# sourceMappingURL=sedeh-flexible-showcase.mjs.map\n","map":null,"preliminaryFileName":"sedeh-flexible-showcase.mjs","sourcemapFileName":"sedeh-flexible-showcase.mjs.map"},{"fileName":"sedeh-flexible-showcase.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"sedeh-flexible-showcase.mjs\",\"sources\":[\"../../../projects/flexible-showcase/src/lib/flexible-showcase.component.ts\",\"../../../projects/flexible-showcase/src/lib/flexible-showcase.component.html\",\"../../../projects/flexible-showcase/src/lib/flexible-showcase-module.ts\",\"../../../projects/flexible-showcase/src/public-api.ts\",\"../../../projects/flexible-showcase/src/sedeh-flexible-showcase.ts\"],\"sourcesContent\":[\"\\r\\nimport {\\r\\n    Component,\\r\\n\\tInput,\\r\\n\\tOutput,\\r\\n\\tAfterContentInit,\\r\\n\\tElementRef,\\r\\n\\tEventEmitter,\\r\\n\\tViewChild,\\r\\n\\tOnChanges\\r\\n} from '@angular/core';\\r\\n\\r\\n\\r\\n@Component({\\r\\n\\tselector: 'showcase',\\r\\n\\ttemplateUrl: './flexible-showcase.component.html',\\r\\n\\tstyleUrls: ['./flexible-showcase.component.scss']\\r\\n})\\r\\nexport class FlexibleShowcaseComponent implements AfterContentInit, OnChanges  {\\r\\n\\tprivate translatedPosition = 0;\\r\\n\\tshiftedIndex = 0;\\r\\n\\tselectedIndex = 0;\\r\\n\\tselectedItem: any;\\r\\n\\thoverItem: any;\\r\\n\\tpaginate = false;\\r\\n\\r\\n\\t@ViewChild(\\\"largeImage\\\", {static: false})\\r\\n\\tprivate largeImage!: ElementRef;\\r\\n\\r\\n\\t@ViewChild(\\\"slider\\\", {static: false})\\r\\n\\tprivate slider!: ElementRef;\\r\\n\\r\\n    @Input() position!: string; // top, left, bottom, right\\r\\n\\t@Input() width!: number;\\r\\n\\t@Input() hasControls = true;\\r\\n\\t@Input() hoverPlay = false;  \\r\\n\\t@Input() height!: number;\\r\\n\\t@Input() productId!: string;\\r\\n    @Input() zoomOnHover = false\\r\\n    @Input() peekOnHover = false\\r\\n    @Input() enableEventTracking = false\\r\\n\\t@Input() magnificationFactor = 2;\\r\\n    @Input() thumbnails!: any[];\\r\\n    @Input() message = \\\"click to select \\\";\\r\\n\\r\\n\\t@Output('onEventTracking')\\r\\n\\tprivate onEventTracking = new EventEmitter();\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n\\tngAfterContentInit() {\\r\\n\\t\\tif (this.thumbnails) {\\r\\n\\t\\t\\tthis.selectedIndex = 0;\\r\\n\\t\\t\\tthis.thumbnails[0].selected = true;\\r\\n\\t\\t\\tthis.selectedItem = this.thumbnails[0];\\r\\n\\t\\t}\\r\\n\\t\\tthis.paginate = (this.thumbnails.length * 60) > this.width;\\r\\n\\t}\\r\\n\\tngOnChanges(changes: any) {\\r\\n\\t\\tif (changes.position && this.slider) {\\r\\n\\t\\t\\t// should have initial position or remember last user action.\\r\\n\\t\\t\\tthis.translatedPosition = 0;\\r\\n\\t\\t\\tthis.shiftedIndex = 0;\\r\\n\\t\\t\\tthis.slider.nativeElement.style.transform = \\\"translate(0px,0px)\\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverOver(event: any) {\\r\\n\\t\\tif (this.zoomOnHover && this.largeImage) {\\r\\n\\t\\t\\tconst img = event.target.children[0];\\r\\n\\t\\t\\tif (img) {\\r\\n\\t\\t\\t  const rect = img.getBoundingClientRect();\\r\\n\\t\\t\\t  this.largeImage.nativeElement.style.width = (this.magnificationFactor * rect.width) + 'px';\\r\\n\\t\\t\\t  this.largeImage.nativeElement.style.height = (this.magnificationFactor * rect.height) + 'px';\\r\\n\\t\\t\\t  img.style.visibility = 'hidden';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\t\\taction: \\\"zoomed\\\",\\r\\n\\t\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\t\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverOut(event: any) {\\r\\n\\t\\tif (this.largeImage) {\\r\\n\\t\\t\\tconst img = event.target.children[0];\\r\\n\\t\\t\\timg.style.visibility = 'visible';\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.opacity = 0;\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.top = \\\"-10000px\\\";\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.left = \\\"-10000px\\\";\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\t\\taction: event.type,\\r\\n\\t\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\t\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverViewPort(event: any) {\\r\\n\\t\\tif (this.zoomOnHover && this.largeImage) {\\r\\n\\t\\t\\tconst img = event.target.children[0];\\r\\n\\t\\t\\tconst rect = img.getBoundingClientRect();\\r\\n\\t\\t\\tconst dx = (this.width - rect.width)*(this.magnificationFactor/2);\\r\\n\\t\\t\\tconst dy = (this.height - rect.height)*(this.magnificationFactor/2);\\r\\n\\t\\t\\tconst y = event.layerY * (this.magnificationFactor - 1);\\r\\n\\t\\t\\tconst x = event.layerX * (this.magnificationFactor - 1);\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.top = (-y + dy) + \\\"px\\\";\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.left = (-x + dx) + \\\"px\\\";\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.opacity = 1;\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\t\\taction: event.type,\\r\\n\\t\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\t\\ttime: new Date(),\\r\\n\\t\\t\\t\\t\\titem: {\\r\\n\\t\\t\\t\\t\\t\\tY: x,\\r\\n\\t\\t\\t\\t\\t\\tX: y\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\t\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tshiftDisplay(slider: HTMLElement, position: string, toEnd: boolean) {\\r\\n\\t\\tif (this.paginate) {\\r\\n\\t\\t\\tconst rect = slider.getBoundingClientRect();\\r\\n\\t\\t\\tconst child: any = slider.children[this.shiftedIndex];\\r\\n\\t\\t\\tconst rect2 = child.getBoundingClientRect();\\r\\n\\t\\t\\tconst len = (slider.children.length -1);\\r\\n\\t\\t\\tconst tp = this.translatedPosition;\\r\\n\\r\\n\\t\\t\\tif (position === \\\"top\\\" || position === \\\"bottom\\\") {\\r\\n\\t\\t\\t\\tthis.translatedPosition += (toEnd ? -rect2.width : rect2.width);\\r\\n\\t\\t\\t\\tthis.translatedPosition = \\r\\n\\t\\t\\t\\t\\tthis.translatedPosition > 0 ? 0 : \\r\\n\\t\\t\\t\\t\\t\\t((this.translatedPosition + rect.width) < 0 ? this.translatedPosition + rect2.width : this.translatedPosition);\\r\\n\\t\\t\\t\\tthis.slider.nativeElement.style.transform = \\\"translateX(\\\" + this.translatedPosition + \\\"px)\\\";\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tthis.translatedPosition += (toEnd ? -rect2.height : rect2.height);\\r\\n\\t\\t\\t\\tthis.translatedPosition = \\r\\n\\t\\t\\t\\t\\tthis.translatedPosition > 0 ? 0 : \\r\\n\\t\\t\\t\\t\\t\\t((this.translatedPosition + rect2.height) < 0 ? this.translatedPosition + rect2.height : this.translatedPosition);\\r\\n\\t\\t\\t\\tthis.slider.nativeElement.style.transform = \\\"translateY(\\\" + this.translatedPosition + \\\"px)\\\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (tp !== this.translatedPosition) {\\r\\n\\t\\t\\t\\tif (toEnd) {\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex++;\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex = this.shiftedIndex < len ? this.shiftedIndex : len;\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex--;\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex = this.shiftedIndex < 0 ? 0 : this.shiftedIndex;\\r\\n\\t\\t\\t\\t}\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\taction: \\\"thombnail shift\\\",\\r\\n\\t\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tupdateControls(event: any) {\\r\\n\\t\\tif (this.hasControls) {\\r\\n\\t\\t\\tevent.target.setAttribute('controls','true');\\r\\n\\t\\t}\\r\\n\\t\\tif (this.hoverPlay) {\\r\\n\\t\\t\\tevent.target.play();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tresetControls(event: any) {\\r\\n\\t\\tif (this.hoverPlay && this.isPlaying(event.target)) {\\r\\n\\t\\t\\tevent.target.pause();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tprivate isPlaying(video: any) {\\r\\n\\t\\treturn !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\\r\\n\\t}\\r\\n\\tvideoKeyup(event: any) {\\r\\n\\t\\tconst code = event.which;\\r\\n\\t\\tif (code === 13) {\\r\\n\\t\\t\\tif (this.isPlaying(event.target)) {\\r\\n\\t\\t\\t\\tevent.target.pause();\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tevent.target.play();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tkeyup(event: any) {\\r\\n        const code = event.which;\\r\\n\\t\\t\\r\\n\\t\\tif (code === 13) {\\r\\n\\t\\t\\tevent.target.click();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tvideoEvent(event: any) {\\r\\n\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\taction: event.type,\\r\\n\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\ttime: new Date(),\\r\\n\\t\\t\\t\\titem: {\\r\\n\\t\\t\\t\\t\\tautoplay: event.target.autoplay,\\r\\n\\t\\t\\t\\t\\tcontrols: event.target.controls,\\r\\n\\t\\t\\t\\t\\tduration: event.target.duration,\\r\\n\\t\\t\\t\\t\\tended: event.target.ended,\\r\\n\\t\\t\\t\\t\\terror: event.target.error,\\r\\n\\t\\t\\t\\t\\tpaused: event.target.paused,\\r\\n\\t\\t\\t\\t\\tmuted: event.target.muted,\\r\\n\\t\\t\\t\\t\\tcurrentTime: event.target.currentTime,\\r\\n\\t\\t\\t\\t\\tvolume: event.target.volume\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverTab(i: number, slider: HTMLElement, position: string, onhover: boolean) {\\r\\n\\t\\tif (this.peekOnHover) {\\r\\n\\t\\t\\tthis.hoverItem = this.thumbnails[i];\\r\\n\\t\\t}\\r\\n\\t\\tif(!onhover && i !== this.shiftedIndex) {\\r\\n\\t\\t\\tconst toEnd = this.shiftedIndex < i;\\r\\n\\t\\t\\tthis.shiftedIndex = i;\\r\\n\\t\\t\\tthis.shiftDisplay(slider, position, toEnd);\\r\\n\\t\\t}\\r\\n\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\tproductId: this.thumbnails[i].productId,\\r\\n\\t\\t\\t\\tthumbnailId: this.thumbnails[i].thumbnailId,\\r\\n\\t\\t\\t\\taction: (onhover ? \\\"hover\\\" : \\\"focus\\\"),\\r\\n\\t\\t\\t\\ttitle: this.thumbnails[i].title,\\r\\n\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tselectTab(i: number) {\\r\\n\\t\\tthis.thumbnails.map((tab)=> tab.selected = false );\\r\\n\\t\\tthis.selectedIndex = i;\\r\\n\\t\\tthis.thumbnails[i].selected = true;\\r\\n\\t\\tthis.selectedItem = this.thumbnails[i];\\r\\n\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\tproductId: this.thumbnails[i].productId,\\r\\n\\t\\t\\t\\tthumbnailId: this.thumbnails[i].thumbnailId,\\r\\n\\t\\t\\t\\taction: \\\"select\\\",\\r\\n\\t\\t\\t\\ttitle: this.thumbnails[i].title,\\r\\n\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\",\"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\",\"/*\\r\\n* Provides rendering of flexible tabs in a lazy load fashion.\\r\\n*/\\r\\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\n\\r\\nimport { FlexibleShowcaseComponent } from './flexible-showcase.component';\\r\\n\\r\\n@NgModule({\\r\\n    imports: [\\r\\n        CommonModule\\r\\n    ],\\r\\n    declarations: [\\r\\n        FlexibleShowcaseComponent\\r\\n    ],\\r\\n    exports: [\\r\\n        FlexibleShowcaseComponent\\r\\n    ],\\r\\n    entryComponents: [\\r\\n    ],\\r\\n    providers: [\\r\\n    ],\\r\\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\\r\\n})\\r\\n\\r\\nexport class FlexibleShowcaseModule {}\\r\\n\",\"/*\\n * Public API Surface of flexible-showcase\\n */\\n\\nexport * from './lib/flexible-showcase.component';\\nexport * from './lib/flexible-showcase-module';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}],"fesm2015":[{"exports":["FlexibleShowcaseComponent","FlexibleShowcaseModule"],"facadeModuleId":"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/sedeh-flexible-showcase.mjs","isDynamicEntry":false,"isEntry":true,"isImplicitEntry":false,"moduleIds":["/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase.component.mjs","/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase-module.mjs","/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/public-api.mjs","/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/sedeh-flexible-showcase.mjs"],"name":"sedeh-flexible-showcase","type":"chunk","dynamicImports":[],"fileName":"sedeh-flexible-showcase.mjs","implicitlyLoadedBefore":[],"importedBindings":{"@angular/core":["EventEmitter","*","Component","ViewChild","Input","Output","NgModule","CUSTOM_ELEMENTS_SCHEMA"],"@angular/common":["*","CommonModule"]},"imports":["@angular/core","@angular/common"],"modules":{"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase.component.mjs":{"code":"class FlexibleShowcaseComponent {\n    constructor() {\n        this.translatedPosition = 0;\n        this.shiftedIndex = 0;\n        this.selectedIndex = 0;\n        this.paginate = false;\n        this.hasControls = true;\n        this.hoverPlay = false;\n        this.zoomOnHover = false;\n        this.peekOnHover = false;\n        this.enableEventTracking = false;\n        this.magnificationFactor = 2;\n        this.message = \"click to select \";\n        this.onEventTracking = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        if (this.thumbnails) {\n            this.selectedIndex = 0;\n            this.thumbnails[0].selected = true;\n            this.selectedItem = this.thumbnails[0];\n        }\n        this.paginate = (this.thumbnails.length * 60) > this.width;\n    }\n    ngOnChanges(changes) {\n        if (changes.position && this.slider) {\n            // should have initial position or remember last user action.\n            this.translatedPosition = 0;\n            this.shiftedIndex = 0;\n            this.slider.nativeElement.style.transform = \"translate(0px,0px)\";\n        }\n    }\n    hoverOver(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            if (img) {\n                const rect = img.getBoundingClientRect();\n                this.largeImage.nativeElement.style.width = (this.magnificationFactor * rect.width) + 'px';\n                this.largeImage.nativeElement.style.height = (this.magnificationFactor * rect.height) + 'px';\n                img.style.visibility = 'hidden';\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: \"zoomed\",\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverOut(event) {\n        if (this.largeImage) {\n            const img = event.target.children[0];\n            img.style.visibility = 'visible';\n            this.largeImage.nativeElement.style.opacity = 0;\n            this.largeImage.nativeElement.style.top = \"-10000px\";\n            this.largeImage.nativeElement.style.left = \"-10000px\";\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverViewPort(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            const rect = img.getBoundingClientRect();\n            const dx = (this.width - rect.width) * (this.magnificationFactor / 2);\n            const dy = (this.height - rect.height) * (this.magnificationFactor / 2);\n            const y = event.layerY * (this.magnificationFactor - 1);\n            const x = event.layerX * (this.magnificationFactor - 1);\n            this.largeImage.nativeElement.style.top = (-y + dy) + \"px\";\n            this.largeImage.nativeElement.style.left = (-x + dx) + \"px\";\n            this.largeImage.nativeElement.style.opacity = 1;\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date(),\n                    item: {\n                        Y: x,\n                        X: y\n                    }\n                });\n            }\n        }\n    }\n    shiftDisplay(slider, position, toEnd) {\n        if (this.paginate) {\n            const rect = slider.getBoundingClientRect();\n            const child = slider.children[this.shiftedIndex];\n            const rect2 = child.getBoundingClientRect();\n            const len = (slider.children.length - 1);\n            const tp = this.translatedPosition;\n            if (position === \"top\" || position === \"bottom\") {\n                this.translatedPosition += (toEnd ? -rect2.width : rect2.width);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect.width) < 0 ? this.translatedPosition + rect2.width : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateX(\" + this.translatedPosition + \"px)\";\n            }\n            else {\n                this.translatedPosition += (toEnd ? -rect2.height : rect2.height);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect2.height) < 0 ? this.translatedPosition + rect2.height : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateY(\" + this.translatedPosition + \"px)\";\n            }\n            if (tp !== this.translatedPosition) {\n                if (toEnd) {\n                    this.shiftedIndex++;\n                    this.shiftedIndex = this.shiftedIndex < len ? this.shiftedIndex : len;\n                }\n                else {\n                    this.shiftedIndex--;\n                    this.shiftedIndex = this.shiftedIndex < 0 ? 0 : this.shiftedIndex;\n                }\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    action: \"thombnail shift\",\n                    time: new Date()\n                });\n            }\n        }\n    }\n    updateControls(event) {\n        if (this.hasControls) {\n            event.target.setAttribute('controls', 'true');\n        }\n        if (this.hoverPlay) {\n            event.target.play();\n        }\n    }\n    resetControls(event) {\n        if (this.hoverPlay && this.isPlaying(event.target)) {\n            event.target.pause();\n        }\n    }\n    isPlaying(video) {\n        return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\n    }\n    videoKeyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            if (this.isPlaying(event.target)) {\n                event.target.pause();\n            }\n            else {\n                event.target.play();\n            }\n        }\n    }\n    keyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            event.target.click();\n        }\n    }\n    videoEvent(event) {\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.productId,\n                thumbnailId: this.selectedItem.thumbnailId,\n                action: event.type,\n                title: this.selectedItem.title,\n                time: new Date(),\n                item: {\n                    autoplay: event.target.autoplay,\n                    controls: event.target.controls,\n                    duration: event.target.duration,\n                    ended: event.target.ended,\n                    error: event.target.error,\n                    paused: event.target.paused,\n                    muted: event.target.muted,\n                    currentTime: event.target.currentTime,\n                    volume: event.target.volume\n                }\n            });\n        }\n    }\n    hoverTab(i, slider, position, onhover) {\n        if (this.peekOnHover) {\n            this.hoverItem = this.thumbnails[i];\n        }\n        if (!onhover && i !== this.shiftedIndex) {\n            const toEnd = this.shiftedIndex < i;\n            this.shiftedIndex = i;\n            this.shiftDisplay(slider, position, toEnd);\n        }\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: (onhover ? \"hover\" : \"focus\"),\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n    selectTab(i) {\n        this.thumbnails.map((tab) => tab.selected = false);\n        this.selectedIndex = i;\n        this.thumbnails[i].selected = true;\n        this.selectedItem = this.thumbnails[i];\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: \"select\",\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n}\nFlexibleShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nFlexibleShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: FlexibleShowcaseComponent, selector: \"showcase\", inputs: { position: \"position\", width: \"width\", hasControls: \"hasControls\", hoverPlay: \"hoverPlay\", height: \"height\", productId: \"productId\", zoomOnHover: \"zoomOnHover\", peekOnHover: \"peekOnHover\", enableEventTracking: \"enableEventTracking\", magnificationFactor: \"magnificationFactor\", thumbnails: \"thumbnails\", message: \"message\" }, outputs: { onEventTracking: \"onEventTracking\" }, viewQueries: [{ propertyName: \"largeImage\", first: true, predicate: [\"largeImage\"], descendants: true }, { propertyName: \"slider\", first: true, predicate: [\"slider\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'showcase', template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { largeImage: [{\n                type: ViewChild,\n                args: [\"largeImage\", { static: false }]\n            }], slider: [{\n                type: ViewChild,\n                args: [\"slider\", { static: false }]\n            }], position: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], hasControls: [{\n                type: Input\n            }], hoverPlay: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], productId: [{\n                type: Input\n            }], zoomOnHover: [{\n                type: Input\n            }], peekOnHover: [{\n                type: Input\n            }], enableEventTracking: [{\n                type: Input\n            }], magnificationFactor: [{\n                type: Input\n            }], thumbnails: [{\n                type: Input\n            }], message: [{\n                type: Input\n            }], onEventTracking: [{\n                type: Output,\n                args: ['onEventTracking']\n            }] } });","originalLength":72330,"removedExports":[],"renderedExports":["FlexibleShowcaseComponent"],"renderedLength":36821},"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/lib/flexible-showcase-module.mjs":{"code":"/*\n* Provides rendering of flexible tabs in a lazy load fashion.\n*/\nclass FlexibleShowcaseModule {\n}\nFlexibleShowcaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFlexibleShowcaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, declarations: [FlexibleShowcaseComponent], imports: [CommonModule], exports: [FlexibleShowcaseComponent] });\nFlexibleShowcaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        FlexibleShowcaseComponent\n                    ],\n                    exports: [\n                        FlexibleShowcaseComponent\n                    ],\n                    entryComponents: [],\n                    providers: [],\n                    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n                }]\n        }] });","originalLength":3417,"removedExports":[],"renderedExports":["FlexibleShowcaseModule"],"renderedLength":1357},"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/public-api.mjs":{"code":"/*\n * Public API Surface of flexible-showcase\n */","originalLength":703,"removedExports":[],"renderedExports":[],"renderedLength":49},"/Users/masoud/Documents/GitHub/flexible-showcase/dist/flexible-showcase/esm2020/sedeh-flexible-showcase.mjs":{"code":"/**\n * Generated bundle index. Do not edit.\n */","originalLength":540,"removedExports":[],"renderedExports":[],"renderedLength":47}},"referencedFiles":[],"code":"import * as i0 from '@angular/core';\nimport { EventEmitter, Component, ViewChild, Input, Output, NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport * as i1 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\nclass FlexibleShowcaseComponent {\n    constructor() {\n        this.translatedPosition = 0;\n        this.shiftedIndex = 0;\n        this.selectedIndex = 0;\n        this.paginate = false;\n        this.hasControls = true;\n        this.hoverPlay = false;\n        this.zoomOnHover = false;\n        this.peekOnHover = false;\n        this.enableEventTracking = false;\n        this.magnificationFactor = 2;\n        this.message = \"click to select \";\n        this.onEventTracking = new EventEmitter();\n    }\n    ngAfterContentInit() {\n        if (this.thumbnails) {\n            this.selectedIndex = 0;\n            this.thumbnails[0].selected = true;\n            this.selectedItem = this.thumbnails[0];\n        }\n        this.paginate = (this.thumbnails.length * 60) > this.width;\n    }\n    ngOnChanges(changes) {\n        if (changes.position && this.slider) {\n            // should have initial position or remember last user action.\n            this.translatedPosition = 0;\n            this.shiftedIndex = 0;\n            this.slider.nativeElement.style.transform = \"translate(0px,0px)\";\n        }\n    }\n    hoverOver(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            if (img) {\n                const rect = img.getBoundingClientRect();\n                this.largeImage.nativeElement.style.width = (this.magnificationFactor * rect.width) + 'px';\n                this.largeImage.nativeElement.style.height = (this.magnificationFactor * rect.height) + 'px';\n                img.style.visibility = 'hidden';\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: \"zoomed\",\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverOut(event) {\n        if (this.largeImage) {\n            const img = event.target.children[0];\n            img.style.visibility = 'visible';\n            this.largeImage.nativeElement.style.opacity = 0;\n            this.largeImage.nativeElement.style.top = \"-10000px\";\n            this.largeImage.nativeElement.style.left = \"-10000px\";\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date()\n                });\n            }\n        }\n    }\n    hoverViewPort(event) {\n        if (this.zoomOnHover && this.largeImage) {\n            const img = event.target.children[0];\n            const rect = img.getBoundingClientRect();\n            const dx = (this.width - rect.width) * (this.magnificationFactor / 2);\n            const dy = (this.height - rect.height) * (this.magnificationFactor / 2);\n            const y = event.layerY * (this.magnificationFactor - 1);\n            const x = event.layerX * (this.magnificationFactor - 1);\n            this.largeImage.nativeElement.style.top = (-y + dy) + \"px\";\n            this.largeImage.nativeElement.style.left = (-x + dx) + \"px\";\n            this.largeImage.nativeElement.style.opacity = 1;\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    thumbnailId: this.selectedItem.thumbnailId,\n                    action: event.type,\n                    title: this.selectedItem.title,\n                    time: new Date(),\n                    item: {\n                        Y: x,\n                        X: y\n                    }\n                });\n            }\n        }\n    }\n    shiftDisplay(slider, position, toEnd) {\n        if (this.paginate) {\n            const rect = slider.getBoundingClientRect();\n            const child = slider.children[this.shiftedIndex];\n            const rect2 = child.getBoundingClientRect();\n            const len = (slider.children.length - 1);\n            const tp = this.translatedPosition;\n            if (position === \"top\" || position === \"bottom\") {\n                this.translatedPosition += (toEnd ? -rect2.width : rect2.width);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect.width) < 0 ? this.translatedPosition + rect2.width : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateX(\" + this.translatedPosition + \"px)\";\n            }\n            else {\n                this.translatedPosition += (toEnd ? -rect2.height : rect2.height);\n                this.translatedPosition =\n                    this.translatedPosition > 0 ? 0 :\n                        ((this.translatedPosition + rect2.height) < 0 ? this.translatedPosition + rect2.height : this.translatedPosition);\n                this.slider.nativeElement.style.transform = \"translateY(\" + this.translatedPosition + \"px)\";\n            }\n            if (tp !== this.translatedPosition) {\n                if (toEnd) {\n                    this.shiftedIndex++;\n                    this.shiftedIndex = this.shiftedIndex < len ? this.shiftedIndex : len;\n                }\n                else {\n                    this.shiftedIndex--;\n                    this.shiftedIndex = this.shiftedIndex < 0 ? 0 : this.shiftedIndex;\n                }\n            }\n            if (this.enableEventTracking) {\n                this.onEventTracking.emit({\n                    productId: this.productId,\n                    action: \"thombnail shift\",\n                    time: new Date()\n                });\n            }\n        }\n    }\n    updateControls(event) {\n        if (this.hasControls) {\n            event.target.setAttribute('controls', 'true');\n        }\n        if (this.hoverPlay) {\n            event.target.play();\n        }\n    }\n    resetControls(event) {\n        if (this.hoverPlay && this.isPlaying(event.target)) {\n            event.target.pause();\n        }\n    }\n    isPlaying(video) {\n        return !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\n    }\n    videoKeyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            if (this.isPlaying(event.target)) {\n                event.target.pause();\n            }\n            else {\n                event.target.play();\n            }\n        }\n    }\n    keyup(event) {\n        const code = event.which;\n        if (code === 13) {\n            event.target.click();\n        }\n    }\n    videoEvent(event) {\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.productId,\n                thumbnailId: this.selectedItem.thumbnailId,\n                action: event.type,\n                title: this.selectedItem.title,\n                time: new Date(),\n                item: {\n                    autoplay: event.target.autoplay,\n                    controls: event.target.controls,\n                    duration: event.target.duration,\n                    ended: event.target.ended,\n                    error: event.target.error,\n                    paused: event.target.paused,\n                    muted: event.target.muted,\n                    currentTime: event.target.currentTime,\n                    volume: event.target.volume\n                }\n            });\n        }\n    }\n    hoverTab(i, slider, position, onhover) {\n        if (this.peekOnHover) {\n            this.hoverItem = this.thumbnails[i];\n        }\n        if (!onhover && i !== this.shiftedIndex) {\n            const toEnd = this.shiftedIndex < i;\n            this.shiftedIndex = i;\n            this.shiftDisplay(slider, position, toEnd);\n        }\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: (onhover ? \"hover\" : \"focus\"),\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n    selectTab(i) {\n        this.thumbnails.map((tab) => tab.selected = false);\n        this.selectedIndex = i;\n        this.thumbnails[i].selected = true;\n        this.selectedItem = this.thumbnails[i];\n        if (this.enableEventTracking) {\n            this.onEventTracking.emit({\n                productId: this.thumbnails[i].productId,\n                thumbnailId: this.thumbnails[i].thumbnailId,\n                action: \"select\",\n                title: this.thumbnails[i].title,\n                time: new Date()\n            });\n        }\n    }\n}\nFlexibleShowcaseComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nFlexibleShowcaseComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"15.2.10\", type: FlexibleShowcaseComponent, selector: \"showcase\", inputs: { position: \"position\", width: \"width\", hasControls: \"hasControls\", hoverPlay: \"hoverPlay\", height: \"height\", productId: \"productId\", zoomOnHover: \"zoomOnHover\", peekOnHover: \"peekOnHover\", enableEventTracking: \"enableEventTracking\", magnificationFactor: \"magnificationFactor\", thumbnails: \"thumbnails\", message: \"message\" }, outputs: { onEventTracking: \"onEventTracking\" }, viewQueries: [{ propertyName: \"largeImage\", first: true, predicate: [\"largeImage\"], descendants: true }, { propertyName: \"slider\", first: true, predicate: [\"slider\"], descendants: true }], usesOnChanges: true, ngImport: i0, template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"], dependencies: [{ kind: \"directive\", type: i1.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { kind: \"directive\", type: i1.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'showcase', template: \"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\", styles: [\".showcase{display:flex;width:100%}.showcase .off-screen{display:block;float:left;height:0;overflow:hidden;text-indent:-99999px;width:0}.showcase .showcase-viewport{box-sizing:border-box;border:1px solid #bcd;min-height:150px;overflow:hidden;position:relative}.showcase .showcase-viewport ::ng-deep img,.showcase .showcase-viewport video{width:100%}.showcase .showcase-viewport img.content{pointer-events:none}.showcase .showcase-viewport .hover{position:absolute;background-color:#fff;top:-10000px;left:-10000px;opacity:0;pointer-events:none}.showcase .showcase-control{border:1px solid #bcd;box-sizing:border-box;display:flex}.showcase .showcase-control.top,.showcase .showcase-control.bottom{flex-direction:row;overflow:hidden}.showcase .showcase-control.top .slide-control,.showcase .showcase-control.bottom .slide-control{width:20px;height:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.top .slide-control.left,.showcase .showcase-control.bottom .slide-control.left{border-right:1px solid #bcd}.showcase .showcase-control.top .slide-control.right,.showcase .showcase-control.bottom .slide-control.right{border-left:1px solid #bcd}.showcase .showcase-control.top .slide-control .fa,.showcase .showcase-control.bottom .slide-control .fa{font-weight:700;margin:99% 30%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.top .sliding-viewport.paginate,.showcase .showcase-control.bottom .sliding-viewport.paginate{flex:1;width:100%;overflow:hidden}.showcase .showcase-control.top .sliding-viewport.paginate ul,.showcase .showcase-control.bottom .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:row;transition:transform .3s linear}.showcase .showcase-control.top .sliding-viewport.paginate ul a,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a{position:relative;display:inline-block}.showcase .showcase-control.top .sliding-viewport.paginate ul a .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a .hover{display:none;background-color:#0000001a;pointer-events:none;position:absolute;top:0;width:100%;min-height:100%;z-index:2}.showcase .showcase-control.top .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.top .sliding-viewport.paginate ul a:hover .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:focus .hover,.showcase .showcase-control.bottom .sliding-viewport.paginate ul a:hover .hover{display:flex}.showcase .showcase-control.left,.showcase .showcase-control.right{flex-direction:column;overflow:hidden}.showcase .showcase-control.left .slide-control,.showcase .showcase-control.right .slide-control{height:20px;width:inherit;background-color:#fff;z-index:2}.showcase .showcase-control.left .slide-control.up,.showcase .showcase-control.right .slide-control.up{border-bottom:1px solid #bcd}.showcase .showcase-control.left .slide-control.down,.showcase .showcase-control.right .slide-control.down{border-top:1px solid #bcd}.showcase .showcase-control.left .slide-control .fa,.showcase .showcase-control.right .slide-control .fa{font-weight:700;margin:0 29%;font-size:1.6rem;display:table;line-height:1rem}.showcase .showcase-control.left .sliding-viewport.paginate,.showcase .showcase-control.right .sliding-viewport.paginate{flex:1;height:100%;overflow:hidden}.showcase .showcase-control.left .sliding-viewport.paginate ul,.showcase .showcase-control.right .sliding-viewport.paginate ul{list-style-type:none;padding:0;margin:0;display:flex;flex-direction:column;transition:transform .3s linear}.showcase .showcase-control .sliding-viewport{display:flex}.showcase .showcase-control .sliding-viewport a{box-sizing:border-box;white-space:nowrap;border:0;cursor:pointer;min-height:60px}.showcase .showcase-control .sliding-viewport a ::ng-deep img,.showcase .showcase-control .sliding-viewport a video{margin:auto o;width:60px}.showcase.top{flex-direction:column}.showcase.top .showcase-control{flex-wrap:nowrap}.showcase.top .showcase-control .sliding-viewport{flex-direction:row}.showcase.bottom{flex-direction:column}.showcase.bottom .showcase-control{flex-wrap:nowrap}.showcase.bottom .showcase-control .sliding-viewport,.showcase.left{flex-direction:row}.showcase.left .showcase-control{flex-wrap:nowrap;flex:1}.showcase.left .showcase-control .sliding-viewport{flex-direction:column}.showcase.right{flex-direction:row}.showcase.right .showcase-control{flex-wrap:nowrap;flex:1}.showcase.right .showcase-control .sliding-viewport{flex-direction:column}@media screen and (max-width: 600px){.showcase{display:table}.showcase-control{display:block}.showcase-control a{width:100%;display:table}.showcase-viewport{margin:5px 0}}\\n\"] }]\n        }], ctorParameters: function () { return []; }, propDecorators: { largeImage: [{\n                type: ViewChild,\n                args: [\"largeImage\", { static: false }]\n            }], slider: [{\n                type: ViewChild,\n                args: [\"slider\", { static: false }]\n            }], position: [{\n                type: Input\n            }], width: [{\n                type: Input\n            }], hasControls: [{\n                type: Input\n            }], hoverPlay: [{\n                type: Input\n            }], height: [{\n                type: Input\n            }], productId: [{\n                type: Input\n            }], zoomOnHover: [{\n                type: Input\n            }], peekOnHover: [{\n                type: Input\n            }], enableEventTracking: [{\n                type: Input\n            }], magnificationFactor: [{\n                type: Input\n            }], thumbnails: [{\n                type: Input\n            }], message: [{\n                type: Input\n            }], onEventTracking: [{\n                type: Output,\n                args: ['onEventTracking']\n            }] } });\n\n/*\n* Provides rendering of flexible tabs in a lazy load fashion.\n*/\nclass FlexibleShowcaseModule {\n}\nFlexibleShowcaseModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nFlexibleShowcaseModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, declarations: [FlexibleShowcaseComponent], imports: [CommonModule], exports: [FlexibleShowcaseComponent] });\nFlexibleShowcaseModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, imports: [CommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"15.2.10\", ngImport: i0, type: FlexibleShowcaseModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        CommonModule\n                    ],\n                    declarations: [\n                        FlexibleShowcaseComponent\n                    ],\n                    exports: [\n                        FlexibleShowcaseComponent\n                    ],\n                    entryComponents: [],\n                    providers: [],\n                    schemas: [CUSTOM_ELEMENTS_SCHEMA]\n                }]\n        }] });\n\n/*\n * Public API Surface of flexible-showcase\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { FlexibleShowcaseComponent, FlexibleShowcaseModule };\n//# sourceMappingURL=sedeh-flexible-showcase.mjs.map\n","map":null,"preliminaryFileName":"sedeh-flexible-showcase.mjs","sourcemapFileName":"sedeh-flexible-showcase.mjs.map"},{"fileName":"sedeh-flexible-showcase.mjs.map","needsCodeReference":false,"source":"{\"version\":3,\"file\":\"sedeh-flexible-showcase.mjs\",\"sources\":[\"../../../projects/flexible-showcase/src/lib/flexible-showcase.component.ts\",\"../../../projects/flexible-showcase/src/lib/flexible-showcase.component.html\",\"../../../projects/flexible-showcase/src/lib/flexible-showcase-module.ts\",\"../../../projects/flexible-showcase/src/public-api.ts\",\"../../../projects/flexible-showcase/src/sedeh-flexible-showcase.ts\"],\"sourcesContent\":[\"\\r\\nimport {\\r\\n    Component,\\r\\n\\tInput,\\r\\n\\tOutput,\\r\\n\\tAfterContentInit,\\r\\n\\tElementRef,\\r\\n\\tEventEmitter,\\r\\n\\tViewChild,\\r\\n\\tOnChanges\\r\\n} from '@angular/core';\\r\\n\\r\\n\\r\\n@Component({\\r\\n\\tselector: 'showcase',\\r\\n\\ttemplateUrl: './flexible-showcase.component.html',\\r\\n\\tstyleUrls: ['./flexible-showcase.component.scss']\\r\\n})\\r\\nexport class FlexibleShowcaseComponent implements AfterContentInit, OnChanges  {\\r\\n\\tprivate translatedPosition = 0;\\r\\n\\tshiftedIndex = 0;\\r\\n\\tselectedIndex = 0;\\r\\n\\tselectedItem: any;\\r\\n\\thoverItem: any;\\r\\n\\tpaginate = false;\\r\\n\\r\\n\\t@ViewChild(\\\"largeImage\\\", {static: false})\\r\\n\\tprivate largeImage!: ElementRef;\\r\\n\\r\\n\\t@ViewChild(\\\"slider\\\", {static: false})\\r\\n\\tprivate slider!: ElementRef;\\r\\n\\r\\n    @Input() position!: string; // top, left, bottom, right\\r\\n\\t@Input() width!: number;\\r\\n\\t@Input() hasControls = true;\\r\\n\\t@Input() hoverPlay = false;  \\r\\n\\t@Input() height!: number;\\r\\n\\t@Input() productId!: string;\\r\\n    @Input() zoomOnHover = false\\r\\n    @Input() peekOnHover = false\\r\\n    @Input() enableEventTracking = false\\r\\n\\t@Input() magnificationFactor = 2;\\r\\n    @Input() thumbnails!: any[];\\r\\n    @Input() message = \\\"click to select \\\";\\r\\n\\r\\n\\t@Output('onEventTracking')\\r\\n\\tprivate onEventTracking = new EventEmitter();\\r\\n\\r\\n    constructor() {}\\r\\n\\r\\n\\tngAfterContentInit() {\\r\\n\\t\\tif (this.thumbnails) {\\r\\n\\t\\t\\tthis.selectedIndex = 0;\\r\\n\\t\\t\\tthis.thumbnails[0].selected = true;\\r\\n\\t\\t\\tthis.selectedItem = this.thumbnails[0];\\r\\n\\t\\t}\\r\\n\\t\\tthis.paginate = (this.thumbnails.length * 60) > this.width;\\r\\n\\t}\\r\\n\\tngOnChanges(changes: any) {\\r\\n\\t\\tif (changes.position && this.slider) {\\r\\n\\t\\t\\t// should have initial position or remember last user action.\\r\\n\\t\\t\\tthis.translatedPosition = 0;\\r\\n\\t\\t\\tthis.shiftedIndex = 0;\\r\\n\\t\\t\\tthis.slider.nativeElement.style.transform = \\\"translate(0px,0px)\\\";\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverOver(event: any) {\\r\\n\\t\\tif (this.zoomOnHover && this.largeImage) {\\r\\n\\t\\t\\tconst img = event.target.children[0];\\r\\n\\t\\t\\tif (img) {\\r\\n\\t\\t\\t  const rect = img.getBoundingClientRect();\\r\\n\\t\\t\\t  this.largeImage.nativeElement.style.width = (this.magnificationFactor * rect.width) + 'px';\\r\\n\\t\\t\\t  this.largeImage.nativeElement.style.height = (this.magnificationFactor * rect.height) + 'px';\\r\\n\\t\\t\\t  img.style.visibility = 'hidden';\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\t\\taction: \\\"zoomed\\\",\\r\\n\\t\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\t\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverOut(event: any) {\\r\\n\\t\\tif (this.largeImage) {\\r\\n\\t\\t\\tconst img = event.target.children[0];\\r\\n\\t\\t\\timg.style.visibility = 'visible';\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.opacity = 0;\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.top = \\\"-10000px\\\";\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.left = \\\"-10000px\\\";\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\t\\taction: event.type,\\r\\n\\t\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\t\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverViewPort(event: any) {\\r\\n\\t\\tif (this.zoomOnHover && this.largeImage) {\\r\\n\\t\\t\\tconst img = event.target.children[0];\\r\\n\\t\\t\\tconst rect = img.getBoundingClientRect();\\r\\n\\t\\t\\tconst dx = (this.width - rect.width)*(this.magnificationFactor/2);\\r\\n\\t\\t\\tconst dy = (this.height - rect.height)*(this.magnificationFactor/2);\\r\\n\\t\\t\\tconst y = event.layerY * (this.magnificationFactor - 1);\\r\\n\\t\\t\\tconst x = event.layerX * (this.magnificationFactor - 1);\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.top = (-y + dy) + \\\"px\\\";\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.left = (-x + dx) + \\\"px\\\";\\r\\n\\t\\t\\tthis.largeImage.nativeElement.style.opacity = 1;\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\t\\taction: event.type,\\r\\n\\t\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\t\\ttime: new Date(),\\r\\n\\t\\t\\t\\t\\titem: {\\r\\n\\t\\t\\t\\t\\t\\tY: x,\\r\\n\\t\\t\\t\\t\\t\\tX: y\\r\\n\\t\\t\\t\\t\\t}\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\t\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tshiftDisplay(slider: HTMLElement, position: string, toEnd: boolean) {\\r\\n\\t\\tif (this.paginate) {\\r\\n\\t\\t\\tconst rect = slider.getBoundingClientRect();\\r\\n\\t\\t\\tconst child: any = slider.children[this.shiftedIndex];\\r\\n\\t\\t\\tconst rect2 = child.getBoundingClientRect();\\r\\n\\t\\t\\tconst len = (slider.children.length -1);\\r\\n\\t\\t\\tconst tp = this.translatedPosition;\\r\\n\\r\\n\\t\\t\\tif (position === \\\"top\\\" || position === \\\"bottom\\\") {\\r\\n\\t\\t\\t\\tthis.translatedPosition += (toEnd ? -rect2.width : rect2.width);\\r\\n\\t\\t\\t\\tthis.translatedPosition = \\r\\n\\t\\t\\t\\t\\tthis.translatedPosition > 0 ? 0 : \\r\\n\\t\\t\\t\\t\\t\\t((this.translatedPosition + rect.width) < 0 ? this.translatedPosition + rect2.width : this.translatedPosition);\\r\\n\\t\\t\\t\\tthis.slider.nativeElement.style.transform = \\\"translateX(\\\" + this.translatedPosition + \\\"px)\\\";\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tthis.translatedPosition += (toEnd ? -rect2.height : rect2.height);\\r\\n\\t\\t\\t\\tthis.translatedPosition = \\r\\n\\t\\t\\t\\t\\tthis.translatedPosition > 0 ? 0 : \\r\\n\\t\\t\\t\\t\\t\\t((this.translatedPosition + rect2.height) < 0 ? this.translatedPosition + rect2.height : this.translatedPosition);\\r\\n\\t\\t\\t\\tthis.slider.nativeElement.style.transform = \\\"translateY(\\\" + this.translatedPosition + \\\"px)\\\";\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (tp !== this.translatedPosition) {\\r\\n\\t\\t\\t\\tif (toEnd) {\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex++;\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex = this.shiftedIndex < len ? this.shiftedIndex : len;\\r\\n\\t\\t\\t\\t} else {\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex--;\\r\\n\\t\\t\\t\\t\\tthis.shiftedIndex = this.shiftedIndex < 0 ? 0 : this.shiftedIndex;\\r\\n\\t\\t\\t\\t}\\t\\r\\n\\t\\t\\t}\\r\\n\\t\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\t\\taction: \\\"thombnail shift\\\",\\r\\n\\t\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t\\t});\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tupdateControls(event: any) {\\r\\n\\t\\tif (this.hasControls) {\\r\\n\\t\\t\\tevent.target.setAttribute('controls','true');\\r\\n\\t\\t}\\r\\n\\t\\tif (this.hoverPlay) {\\r\\n\\t\\t\\tevent.target.play();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tresetControls(event: any) {\\r\\n\\t\\tif (this.hoverPlay && this.isPlaying(event.target)) {\\r\\n\\t\\t\\tevent.target.pause();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tprivate isPlaying(video: any) {\\r\\n\\t\\treturn !!(video.currentTime > 0 && !video.paused && !video.ended && video.readyState > 2);\\r\\n\\t}\\r\\n\\tvideoKeyup(event: any) {\\r\\n\\t\\tconst code = event.which;\\r\\n\\t\\tif (code === 13) {\\r\\n\\t\\t\\tif (this.isPlaying(event.target)) {\\r\\n\\t\\t\\t\\tevent.target.pause();\\r\\n\\t\\t\\t} else {\\r\\n\\t\\t\\t\\tevent.target.play();\\r\\n\\t\\t\\t}\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tkeyup(event: any) {\\r\\n        const code = event.which;\\r\\n\\t\\t\\r\\n\\t\\tif (code === 13) {\\r\\n\\t\\t\\tevent.target.click();\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tvideoEvent(event: any) {\\r\\n\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\tproductId: this.productId,\\r\\n\\t\\t\\t\\tthumbnailId: this.selectedItem.thumbnailId,\\r\\n\\t\\t\\t\\taction: event.type,\\r\\n\\t\\t\\t\\ttitle:  this.selectedItem.title,\\r\\n\\t\\t\\t\\ttime: new Date(),\\r\\n\\t\\t\\t\\titem: {\\r\\n\\t\\t\\t\\t\\tautoplay: event.target.autoplay,\\r\\n\\t\\t\\t\\t\\tcontrols: event.target.controls,\\r\\n\\t\\t\\t\\t\\tduration: event.target.duration,\\r\\n\\t\\t\\t\\t\\tended: event.target.ended,\\r\\n\\t\\t\\t\\t\\terror: event.target.error,\\r\\n\\t\\t\\t\\t\\tpaused: event.target.paused,\\r\\n\\t\\t\\t\\t\\tmuted: event.target.muted,\\r\\n\\t\\t\\t\\t\\tcurrentTime: event.target.currentTime,\\r\\n\\t\\t\\t\\t\\tvolume: event.target.volume\\r\\n\\t\\t\\t\\t}\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\thoverTab(i: number, slider: HTMLElement, position: string, onhover: boolean) {\\r\\n\\t\\tif (this.peekOnHover) {\\r\\n\\t\\t\\tthis.hoverItem = this.thumbnails[i];\\r\\n\\t\\t}\\r\\n\\t\\tif(!onhover && i !== this.shiftedIndex) {\\r\\n\\t\\t\\tconst toEnd = this.shiftedIndex < i;\\r\\n\\t\\t\\tthis.shiftedIndex = i;\\r\\n\\t\\t\\tthis.shiftDisplay(slider, position, toEnd);\\r\\n\\t\\t}\\r\\n\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\tproductId: this.thumbnails[i].productId,\\r\\n\\t\\t\\t\\tthumbnailId: this.thumbnails[i].thumbnailId,\\r\\n\\t\\t\\t\\taction: (onhover ? \\\"hover\\\" : \\\"focus\\\"),\\r\\n\\t\\t\\t\\ttitle: this.thumbnails[i].title,\\r\\n\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n\\tselectTab(i: number) {\\r\\n\\t\\tthis.thumbnails.map((tab)=> tab.selected = false );\\r\\n\\t\\tthis.selectedIndex = i;\\r\\n\\t\\tthis.thumbnails[i].selected = true;\\r\\n\\t\\tthis.selectedItem = this.thumbnails[i];\\r\\n\\t\\tif (this.enableEventTracking) {\\r\\n\\t\\t\\tthis.onEventTracking.emit({\\r\\n\\t\\t\\t\\tproductId: this.thumbnails[i].productId,\\r\\n\\t\\t\\t\\tthumbnailId: this.thumbnails[i].thumbnailId,\\r\\n\\t\\t\\t\\taction: \\\"select\\\",\\r\\n\\t\\t\\t\\ttitle: this.thumbnails[i].title,\\r\\n\\t\\t\\t\\ttime: new Date()\\r\\n\\t\\t\\t});\\r\\n\\t\\t}\\r\\n\\t}\\r\\n}\\r\\n\",\"\\r\\n<div class=\\\"showcase {{position}}\\\">\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'top' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'left' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'top' || position === 'left'\\\">\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'top'\\\"\\r\\n            [class.up]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul  #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        (mouseleave)=\\\"hoverItem = undefined\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video height=\\\"100%\\\" class=\\\"content\\\" *ngIf=\\\"item.type === 'video'\\\" disabled=\\\"disabled\\\" tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                        <span class=\\\"hover\\\">&nbsp;</span>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" \\r\\n            tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'top'\\\"\\r\\n            [class.down]=\\\"position == 'left'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'top'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'left'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div tabindex=\\\"0\\\"\\r\\n        class=\\\"showcase-viewport\\\" \\r\\n        [style.width]=\\\"width + 'px'\\\" \\r\\n        [style.height]=\\\"height + 'px'\\\"\\r\\n        (keyup)=\\\"videoKeyup($event)\\\"\\r\\n        (mouseout)=\\\"hoverOut($event)\\\"\\r\\n        (mouseover)=\\\"hoverOver($event)\\\"\\r\\n        (mousemove)=\\\"hoverViewPort($event)\\\">\\r\\n        <img  class=\\\"content\\\" \\r\\n                [src]=\\\"hoverItem ? hoverItem.src.medium : selectedItem.src.medium\\\" \\r\\n                *ngIf=\\\"(hoverItem ? hoverItem.type === 'image' : selectedItem.type === 'image')\\\" />\\r\\n        <img  class=\\\"hover\\\" #largeImage\\r\\n                [src]=\\\"selectedItem.src.large\\\" \\r\\n                *ngIf=\\\"zoomOnHover && selectedItem.type === 'image'\\\" />\\r\\n        <video \\r\\n            class=\\\"content\\\" #video\\r\\n            [style.width]=\\\"width + 'px'\\\" \\r\\n            [style.height]=\\\"height + 'px'\\\"\\r\\n            [attr.poster]=\\\"(hoverItem && hoverItem.poster) ? hoverItem.poster : ((selectedItem && selectedItem.poster) ? selectedItem.poster : null)\\\"\\r\\n            (focus)=\\\"updateControls($event)\\\"\\r\\n            (mouseenter)=\\\"updateControls($event)\\\"\\r\\n            (mouseleave)=\\\"resetControls($event)\\\"\\r\\n            (play)=\\\"videoEvent($event)\\\"\\r\\n            (pause)=\\\"videoEvent($event)\\\"\\r\\n            (ended)=\\\"videoEvent($event)\\\"\\r\\n            (seeked)=\\\"videoEvent($event)\\\"\\r\\n            (error)=\\\"videoEvent($event)\\\"\\r\\n            (fullscreenchange)=\\\"videoEvent($event)\\\"\\r\\n            *ngIf=\\\"(hoverItem ? hoverItem.type === 'video' : selectedItem.type === 'video')\\\" controls>\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.mp4 : selectedItem.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.webm : selectedItem.src.webm\\\" type=\\\"video/webm\\\">\\r\\n            <source [src]=\\\"hoverItem ? hoverItem.src.egg : selectedItem.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n        </video>\\r\\n    </div>\\r\\n    <div class=\\\"showcase-control {{position}}\\\" \\r\\n        role=\\\"list\\\" \\r\\n        [style.width]=\\\"position === 'bottom' ? width + 'px' : null\\\" \\r\\n        [style.height]=\\\"position === 'right' ? height + 'px' : null\\\"\\r\\n        *ngIf=\\\"position === 'bottom' || position === 'right'\\\">\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.left]=\\\"position == 'bottom'\\\"\\r\\n            [class.up]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, false)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-up\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n        <div class=\\\"sliding-viewport paginate\\\">\\r\\n            <ul #slider>\\r\\n                <li *ngFor=\\\"let item of thumbnails; let i = index\\\">\\r\\n                    <a  role=\\\"listitem\\\" \\r\\n                        tabindex=\\\"0\\\"\\r\\n                        (keyup)=\\\"keyup($event)\\\" \\r\\n                        (click)=\\\"selectTab(i)\\\"\\r\\n                        (focus)=\\\"hoverTab(i, slider, position, false)\\\"\\r\\n                        (mouseenter)=\\\"hoverTab(i, slider, position, true)\\\"\\r\\n                        [title]=\\\"item.title\\\" \\r\\n                        [class.selected]=\\\"item.selected\\\">\\r\\n                        <span class=\\\"off-screen\\\" [textContent]=\\\"message\\\"></span>\\r\\n                        <span class=\\\"title off-screen\\\" [textContent]=\\\"item.title\\\"></span>\\r\\n                        <img  class=\\\"content\\\" [src]=\\\"item.src.small\\\" *ngIf=\\\"item.type === 'image'\\\" />\\r\\n                        <video *ngIf=\\\"item.type === 'video'\\\" \\r\\n                            [attr.poster]=\\\"item.poster ? item.poster : null\\\"\\r\\n                            height=\\\"100%\\\" \\r\\n                            class=\\\"content\\\" \\r\\n                            disabled=\\\"disabled\\\"\\r\\n                            tabindex=\\\"-1\\\">\\r\\n                            <source [src]=\\\"item.src.mp4\\\" type=\\\"video/mp4\\\">\\r\\n                            <source [src]=\\\"item.src.webm\\\" type=\\\"video/webm\\\">\\r\\n                            <source [src]=\\\"item.src.egg\\\" type=\\\"video/ogg\\\">\\r\\n                        </video>\\r\\n                    </a>\\r\\n                </li>\\r\\n            </ul>\\r\\n        </div>\\r\\n        <div class=\\\"slide-control\\\" tabindex=\\\"0\\\"\\r\\n            [class.right]=\\\"position == 'bottom'\\\"\\r\\n            [class.down]=\\\"position == 'right'\\\"\\r\\n            *ngIf=\\\"paginate\\\" \\r\\n            (keyup)=\\\"keyup($event)\\\"\\r\\n            (click)=\\\"shiftDisplay(slider, position, true)\\\">\\r\\n            <span *ngIf=\\\"position === 'bottom'\\\" class=\\\"fa fa-angle-right\\\" aria-hidden=\\\"true\\\"></span>\\r\\n            <span *ngIf=\\\"position === 'right'\\\" class=\\\"fa fa-angle-down\\\" aria-hidden=\\\"true\\\"></span>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\",\"/*\\r\\n* Provides rendering of flexible tabs in a lazy load fashion.\\r\\n*/\\r\\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\\r\\nimport { CommonModule } from '@angular/common';\\r\\n\\r\\nimport { FlexibleShowcaseComponent } from './flexible-showcase.component';\\r\\n\\r\\n@NgModule({\\r\\n    imports: [\\r\\n        CommonModule\\r\\n    ],\\r\\n    declarations: [\\r\\n        FlexibleShowcaseComponent\\r\\n    ],\\r\\n    exports: [\\r\\n        FlexibleShowcaseComponent\\r\\n    ],\\r\\n    entryComponents: [\\r\\n    ],\\r\\n    providers: [\\r\\n    ],\\r\\n    schemas: [CUSTOM_ELEMENTS_SCHEMA]\\r\\n})\\r\\n\\r\\nexport class FlexibleShowcaseModule {}\\r\\n\",\"/*\\n * Public API Surface of flexible-showcase\\n */\\n\\nexport * from './lib/flexible-showcase.component';\\nexport * from './lib/flexible-showcase-module';\\n\",\"/**\\n * Generated bundle index. Do not edit.\\n */\\n\\nexport * from './public-api';\\n\"],\"names\":[],\"mappings\":\"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\"}","type":"asset"}]}